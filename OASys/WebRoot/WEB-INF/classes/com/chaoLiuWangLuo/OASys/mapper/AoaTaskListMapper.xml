<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chaoLiuWangLuo.OASys.mapper.AoaTaskListMapper" >
  <resultMap id="BaseResultMap" type="com.chaoLiuWangLuo.OASys.entity.AoaTaskList" >
    <id column="task_id" property="taskId" jdbcType="BIGINT" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="is_cancel" property="isCancel" jdbcType="INTEGER" />
    <result column="is_top" property="isTop" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="star_time" property="starTime" jdbcType="TIMESTAMP" />
    <result column="task_describe" property="taskDescribe" jdbcType="VARCHAR" />
    <result column="ticking" property="ticking" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="reciverlist" property="reciverlist" jdbcType="VARCHAR" />
    <result column="reciverlistId" property="reciverlistId" jdbcType="VARCHAR" />
    
    <!-- 多对一-->
    <association property="user" javaType="AoaUser">
    	<id column="user_id" property="userId"/>
    	<result column="user_name" property="userName"/>
    	<!-- 多对一dept -->
    	<association property="dept" javaType="AoaDept">
    		<id column="dept_id" property="deptId"/>
    		<result column="dept_name" property="deptName"/>
    	</association>
    </association>
    
    <association property="status" javaType="AoaStatusList">
    	<id column="status_id" property="statusId"/>
    	<result column="status_name" property="statusName"/>
    	<result column="sort_precent" property="sortPrecent"/>
    </association>
    
     <association property="type" javaType="AoaTypeList">
    	<id column="type_id" property="typeId"/>
    	<result column="type_name" property="typeName"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    task_id, comment, end_time, is_cancel, is_top, modify_time, publish_time, star_time, 
    status_id, task_describe, ticking, title, type_id, task_push_user_id, reciverlist
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chaoLiuWangLuo.OASys.entity.AoaTaskListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aoa_task_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from aoa_task_list
    where task_id = #{taskId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from aoa_task_list
    where task_id = #{taskId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chaoLiuWangLuo.OASys.entity.AoaTaskListExample" >
    delete from aoa_task_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert"  parameterType="com.chaoLiuWangLuo.OASys.entity.AoaTaskList" >
    insert into aoa_task_list (task_id, comment, end_time, 
      is_cancel, is_top, modify_time, 
      publish_time, star_time, status_id, 
      task_describe, ticking, title, 
      type_id, task_push_user_id, reciverlist,reciverlistId
      )
    values (#{taskId,jdbcType=BIGINT}, #{comment,jdbcType=VARCHAR}, #{endTime,jdbcType=TIMESTAMP}, 
      #{isCancel,jdbcType=INTEGER}, #{isTop,jdbcType=INTEGER}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{starTime,jdbcType=TIMESTAMP}, #{status.statusId,jdbcType=INTEGER}, 
      #{taskDescribe,jdbcType=VARCHAR}, #{ticking,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{type.typeId,jdbcType=BIGINT}, #{user.userId,jdbcType=BIGINT}, #{reciverlist,jdbcType=VARCHAR},#{reciverlistId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chaoLiuWangLuo.OASys.entity.AoaTaskList" >
    insert into aoa_task_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="isCancel != null" >
        is_cancel,
      </if>
      <if test="isTop != null" >
        is_top,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="starTime != null" >
        star_time,
      </if>
      <if test="statusId != null" >
        status_id,
      </if>
      <if test="taskDescribe != null" >
        task_describe,
      </if>
      <if test="ticking != null" >
        ticking,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="taskPushUserId != null" >
        task_push_user_id,
      </if>
      <if test="reciverlist != null" >
        reciverlist,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isCancel != null" >
        #{isCancel,jdbcType=INTEGER},
      </if>
      <if test="isTop != null" >
        #{isTop,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="starTime != null" >
        #{starTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null" >
        #{statusId,jdbcType=INTEGER},
      </if>
      <if test="taskDescribe != null" >
        #{taskDescribe,jdbcType=VARCHAR},
      </if>
      <if test="ticking != null" >
        #{ticking,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="taskPushUserId != null" >
        #{taskPushUserId,jdbcType=BIGINT},
      </if>
      <if test="reciverlist != null" >
        #{reciverlist,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chaoLiuWangLuo.OASys.entity.AoaTaskListExample" resultType="java.lang.Integer" >
    select count(*) from aoa_task_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update aoa_task_list
    <set >
      <if test="record.taskId != null" >
        task_id = #{record.taskId,jdbcType=BIGINT},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isCancel != null" >
        is_cancel = #{record.isCancel,jdbcType=INTEGER},
      </if>
      <if test="record.isTop != null" >
        is_top = #{record.isTop,jdbcType=INTEGER},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.publishTime != null" >
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.starTime != null" >
        star_time = #{record.starTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statusId != null" >
        status_id = #{record.statusId,jdbcType=INTEGER},
      </if>
      <if test="record.taskDescribe != null" >
        task_describe = #{record.taskDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.ticking != null" >
        ticking = #{record.ticking,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.taskPushUserId != null" >
        task_push_user_id = #{record.taskPushUserId,jdbcType=BIGINT},
      </if>
      <if test="record.reciverlist != null" >
        reciverlist = #{record.reciverlist,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update aoa_task_list
    set task_id = #{record.taskId,jdbcType=BIGINT},
      comment = #{record.comment,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      is_cancel = #{record.isCancel,jdbcType=INTEGER},
      is_top = #{record.isTop,jdbcType=INTEGER},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      star_time = #{record.starTime,jdbcType=TIMESTAMP},
      status_id = #{record.statusId,jdbcType=INTEGER},
      task_describe = #{record.taskDescribe,jdbcType=VARCHAR},
      ticking = #{record.ticking,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=BIGINT},
      task_push_user_id = #{record.taskPushUserId,jdbcType=BIGINT},
      reciverlist = #{record.reciverlist,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chaoLiuWangLuo.OASys.entity.AoaTaskList" >
    update aoa_task_list
    <set >
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isCancel != null" >
        is_cancel = #{isCancel,jdbcType=INTEGER},
      </if>
      <if test="isTop != null" >
        is_top = #{isTop,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="starTime != null" >
        star_time = #{starTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status!=null and status.statusId != null" >
        status_id = #{status.statusId,jdbcType=INTEGER},
      </if>
      <if test="taskDescribe != null" >
        task_describe = #{taskDescribe,jdbcType=VARCHAR},
      </if>
      <if test="ticking != null" >
        ticking = #{ticking,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type!=null and type.typeId != null" >
        type_id = #{type.typeId,jdbcType=BIGINT},
      </if>
      <if test="user!=null and user.userId != null" >
        task_push_user_id = #{user.userId,jdbcType=BIGINT},
      </if>
      <if test="reciverlistId != null" >
        reciverlistId = #{reciverlistId,jdbcType=VARCHAR},
      </if>
        <if test="reciverlist != null" >
        reciverlist = #{reciverlist,jdbcType=VARCHAR},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chaoLiuWangLuo.OASys.entity.AoaTaskList" >
    update aoa_task_list
    set comment = #{comment,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      is_cancel = #{isCancel,jdbcType=INTEGER},
      is_top = #{isTop,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      star_time = #{starTime,jdbcType=TIMESTAMP},
      status_id = #{statusId,jdbcType=INTEGER},
      task_describe = #{taskDescribe,jdbcType=VARCHAR},
      ticking = #{ticking,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=BIGINT},
      task_push_user_id = #{taskPushUserId,jdbcType=BIGINT},
      reciverlist = #{reciverlist,jdbcType=VARCHAR}
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
  
  <!-- 分页查询 -->
  <select id="taskQueryPage" resultMap="BaseResultMap" parameterType="queryVo">
   		select t.task_id,t.task_describe,t.ticking,t.reciverlist,t.reciverlistId,t.comment,t.end_time,t.title,t.is_cancel,t.is_top,t.modify_time,t.publish_time,t.star_time,s.status_id,s.status_name,y.type_id,y.type_name,u.user_id,u.user_name,d.dept_id,d.dept_name from aoa_task_list t LEFT JOIN aoa_status_list s on t.status_id=s.status_id LEFT JOIN aoa_type_list y on t.type_id=y.type_id LEFT JOIN aoa_user u on t.task_push_user_id=u.user_id  LEFT JOIN aoa_dept d on u.dept_id=d.dept_id
  	limit #{startRow},#{size} 
  </select>
  <!-- 查询总条数 -->
  <select id="taskFindCount" resultType="java.lang.Integer" parameterType="queryVo">
  	select  count(*) from aoa_task_list t LEFT JOIN aoa_status_list s on t.status_id=s.status_id LEFT JOIN aoa_type_list y on t.type_id=y.type_id LEFT JOIN aoa_user u on t.task_push_user_id=u.user_id  LEFT JOIN aoa_dept d on u.dept_id=d.dept_id
  </select>
  
  <!-- 根据id查询 -->
  <select id="findById" parameterType="Long" resultMap="BaseResultMap">
  		select t.task_id,t.task_describe,t.ticking,t.reciverlist,t.reciverlistId,t.comment,t.end_time,t.title,t.is_cancel,t.is_top,t.modify_time,t.publish_time,t.star_time,s.status_id,s.sort_precent,s.status_name,y.type_id,y.type_name,u.user_id,u.user_name,d.dept_id,d.dept_name from aoa_task_list t LEFT JOIN aoa_status_list s on t.status_id=s.status_id LEFT JOIN aoa_type_list y on t.type_id=y.type_id LEFT JOIN aoa_user u on t.task_push_user_id=u.user_id  LEFT JOIN aoa_dept d on u.dept_id=d.dept_id
  		<where>
  			task_id=#{l}
  		</where>
  </select>
  
  <!-- 添加数据 -->
 <insert id="add"   parameterType="com.chaoLiuWangLuo.OASys.entity.AoaTaskList" >
    insert into aoa_task_list (comment, end_time,is_cancel, is_top, modify_time, publish_time, star_time, status_id, task_describe, ticking, title, type_id, task_push_user_id, reciverlist,reciverlistId)
    values (#{comment,jdbcType=VARCHAR}, #{endTime,jdbcType=TIMESTAMP},#{isCancel,jdbcType=INTEGER}, #{isTop,jdbcType=INTEGER}, #{modifyTime,jdbcType=TIMESTAMP}, #{publishTime,jdbcType=TIMESTAMP}, #{starTime,jdbcType=TIMESTAMP}, #{status.statusId,jdbcType=INTEGER}, #{taskDescribe,jdbcType=VARCHAR}, #{ticking,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},#{type.typeId,jdbcType=BIGINT}, #{user.userId,jdbcType=BIGINT}, #{reciverlist,jdbcType=VARCHAR},#{reciverlistId,jdbcType=VARCHAR})
  	<selectKey resultType="Long" keyProperty="taskId" order="AFTER">
        SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  
</mapper>